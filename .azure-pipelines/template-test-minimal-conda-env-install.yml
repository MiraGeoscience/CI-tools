# File: template-test-minimal-conda-env-install.yml
stages:
  - stage: TestInstallationOnMinimalCondaEnv
    displayName: Test installation on minimal conda environment
    jobs:
      - job: DiscoverFiles
        displayName: 'Discover environment files package'
        steps:
          - task: PowerShell@2
            name: DiscoverFiles
            inputs:
              targetType: 'inline'
              script: |
                ls . #TODO: Debug
                $envFolder = "environments"
                $artifactFolder = "artifact_envFiles"
                $files = Get-ChildItem -Path $envFolder -Filter *.yml -Recurse
                if ($files.Count -eq 0) {
                  Write-Error "No environment files found in $envFolder"
                }
                $matrix = @{}
                if (!(Test-Path -Path $artifactFolder)) {
                    New-Item -ItemType Directory -Path $artifactFolder | Out-Null
                }

                $pipUrlMappings = @{
                    "geology"       = "GEOLOGY"
                    "geophysics"    = "geophysics"
                    "all_deps_only" = "['GEOLOGY', 'GEOPHYSICS']"
                    "all"           = "['GEOLOGY', 'GEOPHYSICS']"
                    "interop"       = "PUBLIC"
                    "simpeg"        = "GEOPHYSICS"
                }

                foreach ($file in $files) {
                  if ($file.Name -match 'conda\.lock\.yml$') {
                    $key = [IO.Path]::GetFileNameWithoutExtension($file.Name)
                    $matrix[$key] = @{ envFile = $file.Name }
                    
                    $matchKey = $null
                    foreach ($pipKey in $pipUrlMappings.Keys) {
                        Write-Host "Checking $pipKey in $($file.Name)"
                        if ($file.Name -match $pipKey) {
                            Write-Host "-- Matched $pipKey in $($file.Name) --"
                            $matchKey = $pipUrlMappings[$pipKey]
                            break
                        }
                    }

                    if ($matchKey) {
                        $matrix[$key].repositories = $matchedKey
                    } else {
                        $matrix[$key].repositories = "[]"
                    }
                  }
                  Copy-Item -Path $file.FullName -Destination $artifactFolder -Force
                }
                
                $matrixJson = $matrix | ConvertTo-Json -Depth 2 -Compress
                echo "##vso[task.setvariable variable=matrix;isOutput=true]$matrixJson"
                Write-Host matrix $matrixJson
          - publish: 'artifact_envFiles/'
            artifact: envFiles
            displayName: 'Publish environment files'

      - job: TestInstallationOnMinimalCondaEnv
        pool:
          vmImage: 'windows-2022'
        container: 
          image: mirageoscienceltd.jfrog.io/mira-docker-local/windows-servercore-ltsc2022-miniforge:latest
          endpoint: Docker-Artifactory
        dependsOn: DiscoverFiles
        strategy:
          matrix: $[ dependencies.DiscoverFiles.outputs['DiscoverFiles.matrix'] ]
        variables:
        - group: MIRA_PYTHON_URL
        steps:
          - checkout: none
          - download: current
            artifact: envFiles
          - script: |
              # IF REPOSITORIES NOT NULL
              if ($repositories) {
                foreach ($repo in $repositories) {
                  pip config set global.index-url $(MIRA_$(repo)_PYPI_URL)
                }
              } 
          - script: |
              cd envFiles
              conda create -y -f $(envFile) -n testEnv
