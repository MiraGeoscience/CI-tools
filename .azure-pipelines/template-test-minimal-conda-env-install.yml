# File: template-test-minimal-conda-env-install.yml
stages:
  - stage: TestInstallationOnMinimalCondaEnv
    displayName: Test installation on minimal conda environment
    jobs:
      - job: DiscoverFiles
        displayName: 'Discover environment files package'
        steps:
          - task: PowerShell@2
            name: DiscoverFiles
            inputs:
              targetType: 'inline'
              script: |
                $envFolder = "environments"
                $artifactFolder = "artifact_envFiles"
                $files = Get-ChildItem -Path $envFolder -Filter *.yml -Recurse
                if ($files.Count -eq 0) {
                  Write-Error "No environment files found in $envFolder"
                }
                $matrix = @{}
                if (!(Test-Path -Path $artifactFolder)) {
                    New-Item -ItemType Directory -Path $artifactFolder | Out-Null
                }

                $pipUrlMappings = @{
                    "geology"       = "geology"
                    "geophysics"    = "geophysics"
                    "all_deps_only" = "geology geophysics"
                    "all"           = "geology geophysics"
                    "interop"       = "public"
                    "simpeg"        = "geophysics"
                }

                foreach ($file in $files) {
                  if ($file.Name -match 'conda\.lock\.yml$') {
                    $key = [IO.Path]::GetFileNameWithoutExtension($file.Name)
                    $matrix[$key] = @{ envFile = $file.Name }
                    
                    $matchKey = $null
                    foreach ($pipKey in $pipUrlMappings.Keys) {
                        if ($($file.Name) -match $pipKey) {
                            $matchKey = $pipKey
                            break
                        }
                    }

                    if ($matchKey) {
                        $matrix[$key].repositories = $($pipUrlMappings[$matchKey])
                    } else {
                        $matrix[$key].repositories = "[]"
                    }
                  }
                  Copy-Item -Path $file.FullName -Destination $artifactFolder -Force
                }
                
                $matrixJson = $matrix | ConvertTo-Json -Depth 2 -Compress
                echo "##vso[task.setvariable variable=matrix;isOutput=true]$matrixJson"
                Write-Host matrix $matrixJson
          - publish: 'artifact_envFiles/'
            artifact: envFiles
            displayName: 'Publish environment files'
      - job: TestInstallationOnMinimalCondaEnv
        pool:
          vmImage: 'windows-2022'
        container: 
          image: mirageoscienceltd.jfrog.io/mira-docker-local/windows-servercore-ltsc2022-miniforge:latest
          endpoint: Docker-Artifactory
        dependsOn: DiscoverFiles
        strategy:
          matrix: $[ dependencies.DiscoverFiles.outputs['DiscoverFiles.matrix'] ]
        variables:
        - group: MIRA_PYTHON
        steps:
          - checkout: none
          - download: current
            artifact: envFiles
          - task: PowerShell@2
            name: ConfigurePypiSources
            inputs:
              targetType: 'inline'
              script: |
                echo "Variables - $(JFROG_ARTIFACTORY_TOKEN) - $(JFROG_ARTIFACTORY_URL) - $(JFROG_ARTIFACTORY_USER)"
                echo "repositories: $(repositories) - envFile: $(envFile)"
                $string = "$(repositories)"
                $array = $string.Split(" ")
                $extra_index_url = ""
                foreach ($repo in $array) {
                  echo "Adding repository ${repo}-pypi-prod"
                  $extra_index_url += "https://$(JFROG_ARTIFACTORY_USER):$(JFROG_ARTIFACTORY_TOKEN)@$(JFROG_ARTIFACTORY_URL)/pypi/${repo}-pypi-prod/simple "
                }
                pip config set global.extra-index-url $extra_index_url
                echo "##vso[task.setvariable variable=extra_index_url;isOutput=true;issecret=true]$extra_index_url"
          - script: |
              pip config set global.extra-index-url $(extra_index_url)
              cd envFiles
              dir
              conda create -y --file $(envFile) -n testEnv
