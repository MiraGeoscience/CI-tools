name: Publish Conda package from release assets

on:
  workflow_call:
    inputs:
        virtual-repo-names:
            description: 'Matrix of virtual repository names to publish on (eg. ["public-conda-prod"])'
            required: true
            type: string

    secrets:
        JFROG_ARTIFACTORY_URL:
            description: 'JFrog Artifactory URL'
            required: true
        JFROG_ARTIFACTORY_TOKEN:
            description: 'JFrog Artifactory Token'
            required: true

defaults:
    run:
        shell: 'bash -l {0}'

jobs:
    publish_conda_asset:
        name: Publish Conda asset
        if: ${{ github.repository_owner == 'MiraGeoscience' }}
        runs-on: 'ubuntu-latest'
        timeout-minutes: 5
        strategy:
            matrix:
                virtual-repo-name: ${{ fromJson(inputs.virtual-repo-names) }}
        steps:
            -   name: Get draft release
                uses: MiraGeoscience/CI-tools/.github/actions/reusable-get_draft_release@feature/DEVOPS-571
                id: get-draft-release
            -   name: Download release assets
                env:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                    RELEASE_TAG: ${{ steps.get-draft-release.outputs.version-tag }}
                run: |
                    gh --version
                    mkdir -p download-assets
                    cd download-assets
                    gh release download ${RELEASE_TAG} -p '.tar.bz2'
            -   name: Publish package to Artifactory
                uses: MiraGeoscience/CI-tools/.github/actions/reusable-python-publish_to_artifactory@main
                with:
                    build-dir-path: download-assets
                    artifactory-dir-path: ${{ matrix.virtual-repo-name}}/noarch
                    JFROG_ARTIFACTORY_URL: ${{ secrets.JFROG_ARTIFACTORY_URL }}
                    JFROG_ARTIFACTORY_TOKEN: ${{ secrets.JFROG_ARTIFACTORY_TOKEN }}
