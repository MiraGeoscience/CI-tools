name: Publish condan package to Artifactory 

on:
  workflow_call:
    inputs:
        package_name:
            description: 'Name of the package to build'
            required: true
            type: string
        python_ver:
            description: 'Python version to use (eg: 3.10)'
            required: true
            type: string
        version_tag:
            description: 'Version tag of the package to build'
            required: true
            type: string
        lfs:
            description: 'Boolean to indicate if Github LFS is needed'
            required: false
            type: boolean
            default: false
        MIRA_CONDA_REPO_URL:
            description: 'URL of the extra repository on JFrog Artifactory'
            required: false
            type: string
            default: 'https://mirageoscienceltd.jfrog.io/ui/repos/tree/General/analyst-dev-conda-local'

    secrets:
        MIRA_CONDA_REPO_TOKEN:
            description: 'Bearer token for the extra repository on JFrog Artifactory'
            required: true

defaults:
    run:
        shell: 'bash -l {0}'

jobs:
    release_on_artifactory:
        name: Release package on Artifactory
        runs-on: ubuntu-latest
        env:
            PYTHONUTF8: 1
            CONDA_CHANNEL_PRIORITY: strict
            PIP_NO_DEPS: 1 # all dependencies are installed from conda
        timeout-minutes: 20
        steps:
            -   name: Checkout
                uses: actions/checkout@v2
                with:
                    lfs: ${{ inputs.lfs }}
            -   name: Check if there is a conda recipe
                run: |
                    if [ -f ${{ inputs.package_name }}/meta.yaml ]; then
                        echo "Conda recipe found"
                    else
                        echo "Conda recipe not found"
                        exit 1
                    fi
            -   name: Setup CONDA_LOCK_ENV_FILE
                run: |
                    os_conda=$( [[ $RUNNER_OS == "Linux" ]] && echo "linux" || ([[ $RUNNER_OS == "Windows" ]] && echo "win" || echo "osx"))
                    
                    echo "CONDA_LOCK_ENV_FILE=environments/py-${{ inputs.python_ver }}-${os_conda}-64-dev.conda.lock.yml" >> $GITHUB_ENV
            -   uses: MiraGeoscience/CI-tools/.github/actions/reusable-python-setup_conda@main
                name: Setup conda env
                with:
                  python_ver: ${{ inputs.python_ver }}
            -   name: Install dependencies
                run: conda install -y conda-build conda-verify
            -   name: Build package
                id: build_package
                run: |
                    conda build ${{ inputs.package_name }}
                    build_path=$(conda build --output ${{ inputs.package_name }})
                    build_name=$(basename ${build_path})
                    echo "BUILD_PATH=${build_path}" >> $GITHUB_ENV
                    echo "BUILD_NAME=${build_name}" >> $GITHUB_ENV	
            -   name: Upload build package
                uses: actions/upload-artifact@v4
                with:
                    name: ${{ env.BUILD_NAME }}
                    path: ${{ env.BUILD_PATH }}
                    retention-days: 7
            -   name: Publish on Artifactory
                run: |
                    curl -T ${{ env.BUILD_PATH }} -H "Authorization: Bearer ${{ secrets.MIRA_CONDA_REPO_TOKEN }}" "${{ inputs.MIRA_CONDA_REPO_URL }}/${{ inputs.package_name }}/${{ inputs.version_tag }}/${{ env.BUILD_NAME }}"
