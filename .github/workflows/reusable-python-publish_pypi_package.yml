name: Publish pypi package to Artifactory 

on:
  workflow_call:
    inputs:
        package-manager:
            description: 'Name of the package manager (eg. "poetry")'
            required: true
            type: string
            default: 'poetry'
        package-name:
            description: 'Name of the package to build'
            required: true
            type: string
        python-version:
            description: 'Python version to use (eg: 3.10)'
            required: true
            type: string
        version-tag:
            description: 'Version tag of the package to build'
            required: true
            type: string
        lfs:
            description: 'Boolean to indicate if Github LFS is needed'
            required: false
            type: boolean
            default: false
        
        extra-repository:
            description: 'Boolean to indicate if an extra repository is needed to manage the dependencies'
            required: false
            type: boolean
            default: false
        
        virtual-repo-names:
            description: 'Matrix of virtual repository names to publish on (eg. ["public-dev-pypi"])'
            required: true
            type: string
        os:
            description: 'OS to build against (eg. "ubuntu-latest")'
            required: false
            type: string
            default: 'ubuntu-latest'
        timeout-minutes:
            description: 'Timeout in minutes for the job'
            required: false
            type: number
            default: 20

    secrets:
        EXTRA_PYPI_REPO_USER:
            description: 'Extra PyPI repository username for dependencies. Only used if `extra-repository` is True.'
            required: false
        EXTRA_PYPI_REPO_TOKEN:
            description: 'Extra PyPI repository token. Only used if `extra-repository` is True.'
            required: false
        JFROG_ARTIFACTORY_URL:
            description: 'JFrog Artifactory URL'
            required: true
        JFROG_ARTIFACTORY_TOKEN:
            description: 'JFrog Artifactory Token'
            required: true

defaults:
    run:
        shell: 'bash -l {0}'

jobs:
    build_poetry_package:
        name: Build poetry package
        uses: MiraGeoscience/CI-tools/.github/workflows/reusable-python-build_poetry_package.yml@DEVOPS-504
        with:
            package-name: ${{ inputs.package-name }}
            python-version: ${{ inputs.python-version }}
            version-tag: ${{ inputs.version-tag }}
            lfs: ${{ inputs.lfs }}
            virtual-repo-names: ${{ inputs.virtual-repo-names }}
            os: ${{ inputs.os }}
            timeout-minutes: ${{ inputs.timeout-minutes }}
        secrets:
            JFROG_ARTIFACTORY_URL: ${{ secrets.JFROG_ARTIFACTORY_URL }}
            JFROG_ARTIFACTORY_TOKEN: ${{ secrets.JFROG_ARTIFACTORY_TOKEN }}
    publish_package_on_artifactory:
        name: Publish package on artifactory
        runs-on: 'ubuntu-latest'
        timeout-minutes: 5
        needs: build_poetry_package
        strategy:
            matrix:
                virtual-repo-name: ${{ fromJson(inputs.virtual-repo-names) }}
        steps:
            -   name: Download build artifact
                uses: actions/download-artifact@v4
                with:
                    name: package-build-pypi
            -   uses: jfrog/setup-jfrog-cli@v4.4.1
                name: Setup JFrog CLI
                env:
                    JF_URL: https://${{ secrets.JFROG_ARTIFACTORY_URL }}
                    JF_ACCESS_TOKEN: ${{ secrets.JFROG_ARTIFACTORY_TOKEN }}
            -   name: Publish package to Artifactory
                run: |
                    for file in ${{ needs.build_poetry_package.outputs.build-dir-path }}/*; do
                        filename=$(basename "${file}") 
                        echo "Uploading in: ${{ matrix.virtual-repo-name }}/${{ inputs.package-name }}/${{ needs.build_poetry_package.outputs.version }}: $filename"
                        jf rt u ${file} ${{ matrix.virtual-repo-name }}/${{ inputs.package-name }}/${{ needs.build_poetry_package.outputs.version }}/$filename
                    done
