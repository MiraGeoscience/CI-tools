name: Test install on Windows

on:
    workflow_call:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  needs_pip_extra: '["geology", "geophysics", "all"]'
  MIRA_EXTRA_PYPI_URL: ${{ secrets.MIRA_EXTRA_PYPI_URL }}

jobs:
  install_env:
    name: install (Windows)
    if: github.event_name != 'pull_request' || github.event.pull_request.draft == false
    strategy:
      fail-fast: false
      matrix:
       python_ver: ['3.10']
       env_name: [
         'interop',
         'geology',
         'geophysics',
         'all',
         'all_deps_only'
       ]
    defaults:
      run:
        shell: powershell
    runs-on: windows-latest
    env:
      PYTHONUTF8: 1
      CONDA_CHANNEL_PRIORITY: strict
      PIP_NO_DEPS: 1 # all dependencies are installed from conda
      BUILD_DIR: build/${{ matrix.env_name }}
      CONDA_LOCK_ENV_FILE: py-${{ matrix.python_ver }}-win-64-${{ matrix.env_name }}.conda.lock.yml
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true

      - name: Generate a cache key
        id: cache-key
        shell: bash
        # reset cache once a day if not in a PR
        run: echo "key=$(${{ github.event_name != 'pull_request' }} && date +%Y-%m-%d)" >> "${GITHUB_OUTPUT}"

      - name: Setup conda env
        if: (
          ( github.event_name == 'push' || github.event_name == 'schedule'
          || (github.event_name == 'pull_request' && github.event.pull_request.draft == false)
          || (github.event_name == 'workflow_dispatch'
            && (
              (github.event.inputs.install_interop == 'true' && matrix.env_name == 'interop')
              || (github.event.inputs.install_geology == 'true' && matrix.env_name == 'geology')
              || (github.event.inputs.install_geophysics == 'true' && matrix.env_name == 'geophysics')
              || (github.event.inputs.install_all == 'true' && matrix.env_name == 'all')
              || (github.event.inputs.install_all_deps_only == 'true' && matrix.env_name == 'all_deps_only')
            )))
          && (
            !contains(fromJSON(env.needs_pip_extra), matrix.env_name)
            || env.MIRA_EXTRA_PYPI_URL != ''
          ))
        uses: mamba-org/setup-micromamba@v1
        env:
          PIP_EXTRA_INDEX_URL: >-
            ${{ contains(fromJSON(env.needs_pip_extra), matrix.env_name) && env.MIRA_EXTRA_PYPI_URL || ''}}
        with:
          environment-file: ${{ env.BUILD_DIR}}/${{ env.CONDA_LOCK_ENV_FILE }}
          environment-name: ${{ matrix.env_name }}
          init-shell: powershell
          cache-downloads: true
          cache-downloads-key: downloads-${{ steps.cache-key.outputs.key }}

      - name: Get geoh5-interop version
        if: matrix.env_name != 'all_deps_only'
        run: python -c "import geoh5_interop; print(geoh5_interop.__version__)"

      - name: Get geophysics-pkg version
        if: matrix.env_name == 'all' || matrix.env_name == 'geophysics'
        run: python -c "import mira_geophysics_pkg; print(mira_geophysics_pkg.__version__)"

      - name: Get geology-pkg version
        if: matrix.env_name == 'all' || matrix.env_name == 'geology'
        run: python -c "import mira_geology_pkg; print(mira_geology_pkg.__version__)"
