name: Pre-commit

on:
  workflow_call:
    inputs:
      app-name:
        description: 'Name of the app to run pre-commit on'
        required: false
        type: string
      os:
        description: 'List of OS to run against (e.g. ["ubuntu-latest", "macos-latest"])'
        required: false
        type: string
        default: "['ubuntu-latest']"
      python-version:
        description: 'Python version used with pre-commit'
        required: false
        type: string
        default: "3.10"
      lfs:
        description: 'Boolean to indicate if Github LFS is needed'
        required: false
        type: boolean
        default: false
      timeout-minutes:
        description: 'Timeout in minutes for the job'
        required: false
        type: number
        default: 20
      skip:
        description: 'comma separated list of hooks to skip'
        required: false
        type: string
        default: "pylint"

jobs:
  pre-commit:
    name: pre-commit
    if: ${{ (github.event_name != 'pull_request') || (github.event.pull_request.draft == false) }}
    strategy:
      fail-fast: false
      matrix:
        os: ${{ fromJson(inputs.os) }}
    runs-on: ${{ matrix.os }}
    env:
      SKIP: ${{ inputs.skip }}
    timeout-minutes: ${{ inputs.timeout-minutes }}
    steps:
      - name: Get base depth
        id: base-depth
        if: ${{ (github.event_name == 'pull_request') }}
        run: |
          depth=$(expr ${{ github.event.pull_request.commits }} + 1)
          echo "base-depth=$depth"
          echo "base-depth=$depth" >> $GITHUB_OUTPUT
      - uses: actions/checkout@v5
        with:
          lfs: ${{ inputs.lfs }}
          # for non PR events, check out to depth 1 (the default)
          fetch-depth: ${{ steps.base-depth.outputs.base-depth || 1}}
      - name: Fetch target branch
        if: ${{ (github.event_name == 'pull_request') }}
        run: |
          git fetch origin ${{ github.base_ref }}:${{ github.base_ref }}
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python-version }}
      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          enable-cache: true
      - name: Install pre-commit with uv
        run: uv tool install pre-commit
      - name: Cache for pre-commit hooks
        uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit
          key: pre-commit-3|${{ env.pythonLocation }}|${{ hashFiles('.pre-commit-config.yaml') }}
      - name: Run pre-commit on modified files
        if: ${{ (github.event_name == 'pull_request') }}
        run: |
          uv tool run pre-commit run --hook-stage pre-push --from-ref refs/remotes/origin/${{github.base_ref}} --to-ref .
      - name: Run pre-commit on all files
        if: ${{ github.event_name == 'push' }}
        run: |
          uv tool run pre-commit run --hook-stage pre-push --all-files
