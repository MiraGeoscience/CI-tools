name: Pre-commit

on:
  workflow_call:
    inputs:
      app-name:
        description: 'Name of the app to run pre-commit on'
        required: false
        type: string
      os:
        description: 'Matrix of OS to run against (eg. ["ubuntu-latest", "macos-latest"])'
        required: false
        type: string
        default: "['ubuntu-latest']"
      python-version:
        description: 'Python version used with pre-commit'
        required: false
        type: string
        default: "3.10"
      timeout-minutes:
        description: 'Timeout in minutes for the job'
        required: false
        type: number
        default: 20
      skip:
        description: 'comma separated list of hooks to skip'
        required: false
        type: string
        default: "pylint"

jobs:
  pre-commit:
    name: pre-commit
    if: ${{ (github.event_name != 'pull_request') || (github.event.pull_request.draft == false) }}
    strategy:
      fail-fast: false
      matrix:
        os: ${{ fromJson(inputs.os) }}
    runs-on: ${{ matrix.os }}
    env:
      SKIP: ${{ inputs.skip }}
    timeout-minutes: ${{ inputs.timeout-minutes }}
    steps:
      - uses: actions/checkout@v4
      - run: git fetch --depth=500 origin ${{github.base_ref}}
        if: ${{ (github.event_name == 'pull_request') }}
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python-version }}
      - name: Run pre-commit on modified files
        if: ${{ (github.event_name == 'pull_request') }}
        uses: pre-commit/action@v3.0.1
        with:
          extra_args: --hook-stage pre-push --from-ref origin/${{github.base_ref}} --to-ref .
      - name: Run pre-commit on all files
        if: ${{ github.event_name == 'push' }}
        uses: pre-commit/action@v3.0.1
        with:
          extra_args: --hook-stage pre-push --all-files
