name: Pre-commit

on:
  workflow_call:
    inputs:
      app_name:
        description: 'Name of the app to run pre-commit on'
        required: false
        type: string
      os:
        description: 'Matrix of OS to run against (eg. ["ubuntu-latest", "macos-latest"])'
        required: false
        type: string
        default: "['ubuntu-latest']"
      timeout_minutes:
        description: 'Timeout in minutes for the job'
        required: false
        type: number
        default: 20

jobs:
  pre-commit:
    name: pre-commit
    if: ${{ (github.event_name != 'pull_request') || (github.event.pull_request.draft == false) }}
    strategy:
      fail-fast: false
      matrix:
        os: ${{ fromJson(inputs.os) }}
    runs-on: ${{ matrix.os }}
    env:
      SKIP: pylint
    timeout-minutes: ${{ inputs.timeout_minutes }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
      - name: capture modified files
        if: ${{ github.event_name == 'pull_request' }}
        run: >-
          git fetch --deepen=500 origin ${{github.base_ref}} && 
          if [ -n "${{ inputs.app_name}}"]; then
            echo "FILES_PARAM=$(
              git diff --diff-filter=AM --name-only refs/remotes/origin/${{github.base_ref}}... -- | grep -E "^(${{ inputs.app_name }}|tests)/.*\.py$" | xargs
            )" >> $GITHUB_ENV
          else
            echo "FILES_PARAM=$(
              git diff --diff-filter=AM --name-only refs/remotes/origin/${{github.base_ref}}... -- | xargs
            )" >> $GITHUB_ENV
          fi
          
      - name: Run pre-commit on modified files
        if: ${{ (github.event_name == 'pull_request') && (env.FILES_PARAM) }}
        uses: pre-commit/action@v3.0.0
        with:
          extra_args: --hook-stage push --files ${{ env.FILES_PARAM }}
      - name: Run pre-commit on all files
        if: ${{ github.event_name == 'push' }}
        uses: pre-commit/action@v3.0.0
        with:
          extra_args: --hook-stage push --all-files
