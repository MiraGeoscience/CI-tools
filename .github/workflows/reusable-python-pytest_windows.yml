name: Pytest on Windows

on:
  workflow_call:
    inputs:
      package_manager:
        description: 'Package manager to use (eg. "conda", "poetry")'
        required: true
        type: string
        default: 'poetry'
      python_ver:
        description: 'Matrix of Python versions to test against (eg. ["3.10", "3.11", "3.12"])'	
        required: false
        type: string
        default: "['3.10']"
      cache_number:
        description: 'Cache number to reset cache if poetry.lock has not changed'
        required: false
        type: number
        default: 1
      codecov_reference_python_ver:
        description: 'Python version to use as reference for Codecov'
        required: false
        type: string
    secrets:
      CODECOV_TOKEN:
        description: 'Codecov token'
        required: false

jobs:
  pytest:
    name: pytest (Windows)
    if: github.event_name != 'pull_request' || github.event.pull_request.draft == false
    strategy:
      fail-fast: false
      matrix:
        python_ver: ${{ fromJSON(inputs.python_ver) }}
    defaults:
      run:
        shell: bash
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python version
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python_ver }}
      
      - uses: MiraGeoscience/CI-tools/.github/actions/reusable-python-setup_conda@DEVOPS-459
        name: Setup conda env
        if: ${{ inputs.package_manager == 'conda' }}
        with:
          python_ver: ${{ matrix.python_ver }}
          shell_type: 'powershell'
      - uses: MiraGeoscience/CI-tools/.github/actions/reusable-python-setup_poetry@DEVOPS-459
        name: Setup poetry env
        if: ${{ inputs.package_manager == 'poetry' }}
        with:
          python_ver: ${{ matrix.python_ver }}
          cache_number: ${{ inputs.cache_number }}
      
      - name: Run Pytest (with poetry)
        if : ${{ inputs.package_manager == 'poetry' }}
        run: poetry run pytest --cov --cov-report=xml
      - name: Run Pytest (with conda)
        if : ${{ inputs.package_manager == 'conda' }}
        run: pytest --cov --cov-report=xml
      
      - name: Codecov
        if:  ${{ inputs.codecov_reference_python_ver }} && matrix.python_ver == ${{inputs.codecov_reference_python_ver}}
        uses: codecov/codecov-action@v4
        with:
          name: GitHub
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}
