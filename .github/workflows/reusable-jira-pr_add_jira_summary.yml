# This workflow will comment the PR with the JIRA issue summary
# if a JIRA issue number is detected in the branch name or title

name: Add JIRA issue summary

on:
  workflow_call:
    secrets:
      JIRA_BASE_URL:
        required: true
        description: 'The base URL of your JIRA instance'
      JIRA_API_TOKEN:
        required: true
        description: 'The API token for your JIRA account'
      JIRA_USER_EMAIL:
        required: true
        description: 'The email address for your JIRA account'


jobs:
  add_jira_summary:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    env:
      JIRA_PATTERN: "([A-Z]+)[-# ]*([0-9]+)"
      JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
      JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
      JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}
      
    steps:

    - name: Find JIRA issue key from branch
      id: jira_key_from_branch
      env:
        HEAD_REF: ${{ github.head_ref }}
      run: >
        echo "issue_key=$(
        echo $HEAD_REF | grep -osiE "$JIRA_PATTERN"
        | head -n1 | sed -E "s/\W*$JIRA_PATTERN/\1-\2/i"
        | tr [:lower:] [:upper:]
        )" >> $GITHUB_OUTPUT

    - name: Get JIRA summary from branch
      if: ${{ steps.jira_key_from_branch.outputs.issue_key }}
      id: jira_summary_from_branch
      run: >
        curl -sS -X GET
        -u "${JIRA_USER_EMAIL}:${JIRA_API_TOKEN}"
        -H "Content-Type: application/json"
        "$JIRA_BASE_URL/rest/api/2/issue/${{ steps.jira_key_from_branch.outputs.issue_key }}"
        | echo "summary=$(jq -r '.fields.summary // empty' | xargs)" >> $GITHUB_OUTPUT

    - name: Find JIRA issue key from title
      id: jira_key_from_title
      if: ${{ !steps.jira_summary_from_branch.outputs.summary }}
      env:
        PR_TITLE: ${{ github.event.pull_request.title }}
      run: >
        echo "issue_key=$(
        echo $PR_TITLE | grep -osiE "^\s*\[?\s*$JIRA_PATTERN"
        | head -n1 | sed -E "s/\W*$JIRA_PATTERN/\1-\2/i"
        | tr [:lower:] [:upper:]
        )" >> $GITHUB_OUTPUT

    - name: Get JIRA summary from title
      if: ${{ steps.jira_key_from_title.outputs.issue_key }}
      id: jira_summary_from_title
      run: >
        curl -sS -X GET
        -u "${JIRA_API_TOKEN}:${JIRA_USER_EMAIL}"
        -H "Content-Type: application/json"
        "$JIRA_BASE_URL/rest/api/2/issue/${{ steps.jira_key_from_title.outputs.issue_key }}"
        | echo "summary=$(jq -r '.fields.summary // empty' | xargs)" >> $GITHUB_OUTPUT

    - name: Extract PR title
      id: get_pr_title
      if: ${{ steps.jira_summary_from_branch.outputs.summary || steps.jira_summary_from_title.outputs.summary }}
      env:
        PR_TITLE: ${{ github.event.pull_request.title }}
      run: |
        echo "text=$(echo $PR_TITLE | sed -E "s/^\s*[?[A-Z]+[-# ]*[0-9]+]?[-: ]*(.*)/\1/i")" >> $GITHUB_OUTPUT

    - name: Add comment
      if: ${{ steps.jira_summary_from_branch.outputs.summary || steps.jira_summary_from_title.outputs.summary }}
      env:
        ISSUE_SUMMARY: ${{ steps.jira_summary_from_branch.outputs.summary || steps.jira_summary_from_title.outputs.summary }}
        ISSUE_KEY: ${{ steps.jira_summary_from_branch.outputs.summary && steps.jira_key_from_branch.outputs.issue_key || steps.jira_key_from_title.outputs.issue_key }}
        TITLE_TEXT: ${{ steps.get_pr_title.outputs.text }}
        PR_BODY: ${{ github.event.pull_request.body }}
      run: >
        jq
        --arg ISSUE_ID "$(cat <<< $ISSUE_KEY)"
        --arg ISSUE_SUMMARY "$(cat <<< $ISSUE_SUMMARY)"
        --arg TITLE_TEXT "$(cat <<< ${TITLE_TEXT:-$ISSUE_SUMMARY})"
        --arg PR_BODY "$(cat <<< $PR_BODY)"
        -c '{"title": ($ISSUE_ID + ": " + $TITLE_TEXT), "body": ("**" + $ISSUE_ID + " - " + $ISSUE_SUMMARY + "**\n" + $PR_BODY)}' <<< {}
        | curl -sS -X POST -d @-
        -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}"
        -H "Content-Type: application/json"
        "$GITHUB_API_URL/repos/$GITHUB_REPOSITORY/pulls/${{ github.event.pull_request.number }}"
        > /dev/null
