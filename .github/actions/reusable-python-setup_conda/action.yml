name: Setup conda env
description: Setup conda environment for Python
inputs:
  cache-number:
    description: 'Cache number to reset cache if conda lock file has not changed'
    required: true
    type: number
  python-version:
    description: 'Python version to use'
    required: true
    type: string
  JFROG_ARTIFACTORY_URL:
    description: 'JFrog Artifactory URL, needed if packages are on Artifactory'
    required: false
    type: string
  JFROG_ARTIFACTORY_TOKEN:
    description: 'JFrog Artifactory Token, needed if packages are on Artifactory'
    required: false
    type: string


runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v4
      with:
        persist-credentials: false
    - name: Setup env vars
      shell: bash
      run: |
        os_conda=$( [[ $RUNNER_OS == "Linux" ]] && echo "linux" || echo "win")
        echo "os_conda=$os_conda" >> "$GITHUB_ENV"
        echo "micromamba_version=2.1.0-0" >> "$GITHUB_ENV"
        echo "MAMBA_CHANNEL_ALIAS=https://repo.prefix.dev" >> "$GITHUB_ENV"
    - name: Setup micromamba
      uses: mamba-org/setup-micromamba@v2
      with:
        micromamba-version: ${{ env.micromamba_version }}
        init-shell: bash
        cache-downloads: true
        cache-downloads-key: micromamba-dl${{ inputs.cache-number }}
        environment-name: ""
        post-cleanup: none
    - name: Authenticate to Artifactory
      if: ${{ inputs.JFROG_ARTIFACTORY_URL && inputs.JFROG_ARTIFACTORY_TOKEN }}
      shell: 'bash -l {0}'
      env:
        INPUTS_JFROG_ARTIFACTORY_URL: ${{ inputs.JFROG_ARTIFACTORY_URL }}
        INPUTS_JFROG_ARTIFACTORY_TOKEN: ${{ inputs.JFROG_ARTIFACTORY_TOKEN }}
      run: |
        micromamba auth login ${INPUTS_JFROG_ARTIFACTORY_URL} -u github -p ${INPUTS_JFROG_ARTIFACTORY_TOKEN}
    - name: Create conda env
      uses: mamba-org/setup-micromamba@v2
      with:
        micromamba-version: ${{ env.micromamba_version }}
        environment-file: ${{ env.CONDA_LOCK_ENV_FILE }}
        environment-name: test_env
        init-shell: bash
        cache-downloads: true
        cache-downloads-key: micromamba-dl${{ inputs.cache-number }}
        post-cleanup: none
      env:
        PYTHONUTF8: 1
        CONDA_CHANNEL_PRIORITY: strict
        MAMBA_CHANNEL_PRIORITY: strict
        PIP_NO_DEPS: 1 # all dependencies are installed from conda
        CONDA_LOCK_ENV_FILE: 'environments/py-${{ inputs.python-version }}-${{ env.os_conda }}-64-dev.conda.lock.yml'
