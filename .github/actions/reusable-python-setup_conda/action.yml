name: Setup conda env
description: Setup conda environment for Python
inputs:
  python-version:
    description: 'Python version to use'
    required: true
    type: string
  virtual-repo-names:
    description: 'Matrix of virtual repository names to resolve (eg. ["public-dev-conda"])'
    required: false
    type: string
  JFROG_ARTIFACTORY_URL:
    description: 'JFrog Artifactory URL, to access the virtual repositories, if any'
    required: false
    type: string
  JFROG_ARTIFACTORY_TOKEN:
    description: 'JFrog Artifactory Token, to access the virtual repositories, if any'
    required: false
    type: string

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v4
    - name: Setup CONDA_LOCK_ENV_FILE
      shell: bash
      run: |
        os_conda=$( [[ $RUNNER_OS == "Linux" ]] && echo "linux" || echo "win")
        echo "os_conda=$os_conda" >> $GITHUB_ENV
    - name: Process repository names
      shell: bash
      run: |
        CHANNELS_CONFIG="channels:\\n"
        repository_list=$(echo '${{ inputs.virtual-repo-names }}' | jq -r '.[]')
        for repo_name in ${repository_list}; do
          echo "Adding repository $repo_name"
          CHANNELS_CONFIG="${CHANNELS_CONFIG}  - https://github:${{ inputs.JFROG_ARTIFACTORY_TOKEN }}@${{ inputs.JFROG_ARTIFACTORY_URL }}/artifactory/api/conda/${repo_name}\\n"
        done
        CHANNELS_CONFIG="${CHANNELS_CONFIG}  - conda-forge\\n"
        CHANNELS_CONFIG="${CHANNELS_CONFIG}  - nodefaults\\n"
        {
          echo 'CHANNELS_CONFIG<<EOF'
          echo -e "$CHANNELS_CONFIG"
          echo EOF
        } >> "$GITHUB_ENV"

    - name: Setup conda env
      uses: mamba-org/setup-micromamba@v2
      with:
        micromamba-version: 2.1.0-0
        environment-file: ${{ env.CONDA_LOCK_ENV_FILE }}
        environment-name: test_env
        init-shell: bash
        cache-downloads: true
        post-cleanup: none
        condarc: |
          ${{ env.CHANNELS_CONFIG }}
      env:
        PYTHONUTF8: 1
        CONDA_CHANNEL_PRIORITY: strict
        MAMBA_CHANNEL_PRIORITY: strict
        PIP_NO_DEPS: 1 # all dependencies are installed from conda
        CONDA_LOCK_ENV_FILE: 'environments/py-${{ inputs.python-version }}-${{ env.os_conda }}-64-dev.conda.lock.yml'
        MAMBA_CHANNEL_ALIAS: https://repo.prefix.dev
