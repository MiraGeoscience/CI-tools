name: Setup poetry env
description: Setup poetry environment for Python
inputs:
  python_ver:
    description: 'Python version to use'
    required: true
    type: string
  cache_number:
    description: 'Cache number to reset cache if poetry.lock has not changed'
    required: true
    type: number
  runner_os:
    description: 'Runner OS'
    required: true
    type: string
  extra_repository:
    description: 'Boolean to indicate if extra repository is needed'
    required: false
    type: boolean
    default: false
  repo_user:
    description: 'Repository username'
    required: false
    type: string
  repo_token:
    description: 'Repository token'
    required: false
    type: string

runs:
  using: "composite"
  steps:
    - name: Get full Python version
      id: full-python-version
      run: echo "version=$(python -c "import sys; print('-'.join(str(v) for v in sys.version_info))")" >> $GITHUB_OUTPUT
      shell: bash
    - name: Install poetry
      run: |
        curl -sSL https://install.python-poetry.org | POETRY_HOME=$HOME/.poetry python -
        echo "$HOME/.poetry/bin" >> $GITHUB_PATH
      shell: bash
    - name: Set up cache
      uses: actions/cache@v4
      id: cache
      env:
        CACHE_NUMBER: ${{ inputs.cache_number }}
      with:
        path: .venv
        key: venv-${{ inputs.runner_os }}-${{ steps.full-python-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}-${{ inputs.CACHE_NUMBER }}
    - name: Ensure cache is healthy
      if: steps.cache.outputs.cache-hit == 'true'
      run: timeout 10s poetry run pip --version || rm -rf .venv
      shell: bash
    - name: Config poetry
      run: |
        poetry config virtualenvs.create true
        poetry config virtualenvs.in-project true
      shell: bash
    - name: Config Artifactory repo
      if: ${{ inputs.extra_repository }}
      env:
        POETRY_HTTP_BASIC_MIRA_PYPI_USERNAME : ${{ inputs.repo_user }}
        POETRY_HTTP_BASIC_MIRA_PYPI_PASSWORD : ${{ inputs.repo_token }}
      run: |
        poetry config http-basic.mira_pypi ${{ inputs.repo_user }} ${{ inputs.repo_token }}
        poetry install -vvv

      shell: bash
    - name: Install dependencies
      run: poetry install -vvv
      shell: bash