name: Setup pixi env
description: Setup pixi environment for Python
inputs:
  cache-number:
    description: 'Cache number to reset cache if pixi.lock has not changed'
    required: true
    type: number
  python-version:
    description: 'Python version to decide on the pixi environment to install'
    required: false
    type: string
  JFROG_ARTIFACTORY_URL:
    description: 'JFrog Artifactory URL'
    required: true
    type: string
  JFROG_ARTIFACTORY_TOKEN:
    description: 'JFrog Artifactory Token'
    required: false
    type: string

runs:
  using: "composite"
  steps:
    - id: get-env-name
      name: Get pixi environment name
      shell: bash
      env:
        PYTHON_VERSION: ${{ inputs.python-version }}
      run: |
        pixi_env="py${PYTHON_VERSION//./}"
        echo "pixi-env=$pixi_env" >> "$GITHUB_OUTPUT"
    - uses: prefix-dev/setup-pixi@v0.9.0
      with:
        pixi-version: v0.54.1
        environments: ${{ steps.get-env-name.outputs.pixi-env }}
        cache-key: pixi-env${{ inputs.cache-number }}
        cache: true
        locked: true
        auth-host: ${{ inputs.JFROG_ARTIFACTORY_URL }}
        auth-username: ${{ inputs.JFROG_ARTIFACTORY_TOKEN && 'github' || '' }}
        auth-password: ${{ inputs.JFROG_ARTIFACTORY_TOKEN }}
      env:
        GIT_LFS_SKIP_SMUDGE: 1
